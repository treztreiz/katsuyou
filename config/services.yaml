# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    tenses:
        pres: { label : 'present', default : true }
        past: { label : 'past', default : true }
        vol: { label : 'volitional', default : true, negation : false }
        imp: { label : 'imperative' }
        prov: { label : 'conditional', formality : 'plain' }
    verbs:
        all: ["する","遣る","足す","答える","着く","浴びる","居る","出来る","生まれる","直る","負ける","違う","足りる","見つかる","喜ぶ","困る","無くなる","見える","込む","濡れる","始める","始まる","咲く","吹く","乗る","借りる","立てる","買う","呼ぶ","調べる","選ぶ","晴れる","登る","閉まる","来る","参る","続く","続ける","渡る","泣く","切る","決める","死ぬ","飲む","食べる","終わる","楽しむ","入る","取り換える","出す","倒れる","降る","下がる","見つける","釣る","忘れる","並ぶ","降りる","疲れる","起きる","あげる","返す","行く","進む","出る","出かける","回る","上がる","迎える","渡す","掛ける","有る","持つ","助ける","吸う","飛ぶ","知る","笑う","連れる","習う","貸す","並べる","聞く","住む","見る","下げる","間違える","騒ぐ","作る","会う","要る","知らせる","開ける","開く","塗る","別れる","過ぎる","払う","遊ぶ","刺す","磨く","褒める","引く","押す","入れる","履く","置く","読む","貰う","覚える","直す","頼む","休む","帰る","走る","言う","叱る","探す","売る","送る","見せる","閉める","歌う","座る","寝る","滑る","話す","立つ","盗む","張る","止まる","止める","泳ぐ","脱ぐ","掛かる","取る","教える","思う","投げる","捨てる","育てる","触る","消す","点ける","曲がる","分かる","使う","消える","待つ","歩く","洗う","着る","被る","働く","勤める","包む","書く","已める","勉強する","電話する","反対する","比較する","準備する","結婚する","キスする","ノックする","旅行する","散歩する","洗濯する","説明する","質問する","掃除する","約束する","予約する"]
        defaults :
            - 35 # 来る
            - 44 # 飲む
            - 45 # 食べる
            - 48 # 入る
            - 63 # 行く
            - 65 # 出る
            - 83 # 聞く
            - 85 # 見る
            - 108 # 読む
            - 127 # 話す
            - 157 # 書く
            - 158 # 止める

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # settings_manager:
    #     class: App\Services\SettingsManager
    #     arguments: ['@session']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
